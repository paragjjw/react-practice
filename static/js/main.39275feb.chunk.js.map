{"version":3,"sources":["components/Navbar.js","components/TextBox.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_useState","useState","backgroundColor","color","_useState2","Object","slicedToArray","navStyle","setnavStyle","react_default","a","createElement","style","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","data-bs-display","aria-labelledby","onClick","document","getElementById","innerText","showStyle","console","log","TextBox","text","setText","noOfWords","length","lastIndexOf","split","Style","htmlFor","fontSize","value","onChange","e","target","mode","rows","concat","toUpperCase","toLowerCase","Alert","alert","role","msg","App","setmode","_useState3","_useState4","setalert","_useState5","_useState6","setstyle","Fragment","theme","body","showAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.39275feb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  const [navStyle, setnavStyle] = useState({\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n  });\r\n  function lightTheme() {\r\n    document.getElementById(\"theme\").innerText = \"Light\";\r\n    setnavStyle({ backgroundColor: \"white\", color: \"black !important\" });\r\n    props.showStyle();\r\n  }\r\n  function darkTheme() {\r\n    document.getElementById(\"theme\").innerText = \"Dark\";\r\n    setnavStyle({ backgroundColor: \"black\", color: \"white !important\" });\r\n    props.showStyle();\r\n  }\r\n  function redTheme() {\r\n    document.getElementById(\"theme\").innerText = \"Red\";\r\n    setnavStyle({ backgroundColor: \"#8a0e0e\", color: \"white !important\" });\r\n    props.showStyle();\r\n  }\r\n  function greenTheme() {\r\n    document.getElementById(\"theme\").innerText = \"Green\";\r\n    setnavStyle({ backgroundColor: \"#044804\", color: \"white !important\" });\r\n    console.log(navStyle);\r\n    props.showStyle();\r\n  }\r\n  // let dropdownItems = document.getElementsByClassName(\"dropdown-item\");\r\n  // Array.from(dropdownItems).forEach((element) => {\r\n  //   element.addEventListener(\"click\", (e) => {\r\n\r\n  //     // e.preventDefault();\r\n  //     document.getElementById(\"theme\").innerText = e.target.innerText;\r\n  //     props.showStyle();\r\n  //     // console.log(props.style);\r\n  //     console.log(e.target.innerText);\r\n  //     if (e.target.innerText == \"Light\") {\r\n  //       setnavStyle({ backgroundColor: \"white\", color: \"black !important\" });\r\n  //     } else if (e.target.innerText == \"Dark\") {\r\n  //       setnavStyle({ backgroundColor: \"black\", color: \"white !important\" });\r\n  //     } else if (e.target.innerText == \"Red\") {\r\n  //       setnavStyle({ backgroundColor: \"#8a0e0e\", color: \"white !important\" });\r\n  //     } else if (e.target.innerText == \"Green\") {\r\n  //       setnavStyle({ backgroundColor: \"#044804\", color: \"white !important\" });\r\n  //     }\r\n  //   });\r\n  // });\r\n  return (\r\n    <div style={navStyle}>\r\n      {/* <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      > */}\r\n      <nav className=\"navbar navbar-expand-lg\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  style={navStyle}\r\n                  href=\"/\"\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" style={navStyle} href=\"/about\">\r\n                  About\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            <div className=\"btn-group\" style={navStyle}>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary dropdown-toggle\"\r\n                data-bs-toggle=\"dropdown\"\r\n                data-bs-display=\"static\"\r\n                aria-expanded=\"false\"\r\n                id=\"theme\"\r\n              >\r\n                Choose a theme\r\n              </button>\r\n              <ul\r\n                className=\"dropdown-menu dropdown-menu-lg-end\"\r\n                aria-labelledby=\"dropdownMenuButton1\"\r\n              >\r\n                <li className=\"dropdown-item disabled\">Choose a theme</li>\r\n                <li className=\"dropdown-item\" onClick={lightTheme}>\r\n                  Light\r\n                </li>\r\n                <li className=\"dropdown-item\" onClick={darkTheme}>\r\n                  Dark\r\n                </li>\r\n                <li className=\"dropdown-item\" onClick={greenTheme}>\r\n                  Green\r\n                </li>\r\n                <li className=\"dropdown-item\" onClick={redTheme}>\r\n                  Red\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {/* <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggle}\r\n              />\r\n              <label\r\n                className={`form-check-label text-${\r\n                  props.mode == \"dark\" ? \"light\" : \"dark\"\r\n                }`}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable {props.mode == \"dark\" ? \"light\" : \"dark\"} Mode\r\n              </label>\r\n            </div> */}\r\n            {/* <form classNameName=\"d-flex\" role=\"search\">\r\n              <input\r\n                classNameName=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button classNameName=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextBox(props) {\r\n  const [text, setText] = useState(\"\");\r\n  function typeText(e) {\r\n    setText(e.target.value);\r\n  }\r\n  function UpperCase() {\r\n    setText(text.toUpperCase());\r\n  }\r\n  function LowerCase() {\r\n    setText(text.toLowerCase());\r\n  }\r\n  function noOfWords() {\r\n    if (text.length == 0) return 0;\r\n    if (text.lastIndexOf(\" \") == text.length - 1)\r\n      return text.split(\" \").length - 1;\r\n    return text.split(\" \").length;\r\n  }\r\n  function clearText() {\r\n    setText(\"\");\r\n  }\r\n  return (\r\n    // <div style={{ color: props.mode == \"dark\" ? \"white\" : \"black\" }}>\r\n    <div style={props.Style}>\r\n      <div className=\"mb-3 container\">\r\n        <label htmlFor=\"textBox\" className=\"form-label\">\r\n          <b style={{ fontSize: \"1.3rem\" }}>Enter text here</b>\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={typeText}\r\n          style={{\r\n            backgroundColor: props.mode == \"dark\" ? \"grey\" : \"white\",\r\n            color: props.mode == \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n          id=\"textBox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n        <button\r\n          className={`btn btn-${\r\n            props.mode == \"dark\" ? \"outline-light\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={UpperCase}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          className={`btn btn-${\r\n            props.mode == \"dark\" ? \"outline-light\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={LowerCase}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className={`btn btn-${\r\n            props.mode == \"dark\" ? \"outline-light\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={clearText}\r\n        >\r\n          Clear text\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {noOfWords()} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * noOfWords()} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter some text in the above textbox to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{props.alert.type == \"success\" ? \"Success! \" : \"\"}</strong>\r\n        {props.alert.msg}\r\n        {/* <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextBox from \"./components/TextBox\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   Routes,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const [style, setstyle] = useState({\n    backgroundColor: \"white\",\n    color: \"black\",\n  });\n  function showStyle() {\n    let theme = document.getElementById(\"theme\").innerText;\n    // console.log(theme);\n    if (theme == \"Light\") {\n      setstyle({\n        backgroundColor: \"white\",\n        color: \"black\",\n      });\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n    } else if (theme == \"Dark\") {\n      setstyle({\n        backgroundColor: \"black\",\n        color: \"white\",\n      });\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n    } else if (theme == \"Red\") {\n      setstyle({\n        backgroundColor: \"rgb(133, 86, 86)\",\n        color: \"white\",\n      });\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(133, 86, 86)\";\n      document.body.style.color = \"white\";\n    } else if (theme == \"Green\") {\n      setstyle({\n        backgroundColor: \"rgb(33, 115, 33)\",\n        color: \"white\",\n      });\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(33, 115, 33)\";\n      document.body.style.color = \"white\";\n    }\n  }\n  function showAlert(message, type) {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 3000);\n  }\n  // function toggleMode() {\n  //   if (mode == \"light\") {\n  //     setmode(\"dark\");\n  //     document.body.style.backgroundColor = \"#0c1859\";\n  //     showAlert(\"Dark Mode enables successfully\", \"success\");\n  //   } else {\n  //     setmode(\"light\");\n  //     document.body.style.backgroundColor = \"white\";\n  //     showAlert(\"Light Mode enables successfully\", \"success\");\n  //   }\n  // }\n  return (\n    // <Router>\n    <>\n      <Navbar title=\"textUtils\" showStyle={showStyle}></Navbar>\n      <Alert alert={alert}></Alert>\n      {/* <Routes>\n          <Route path=\"/about\" element={<About />} />\n          <Route\n            path=\"/\"\n            element={\n              <TextBox\n                mode={mode}\n                Style={style}\n                showAlert={showAlert}\n              ></TextBox>\n            }\n          />\n        </Routes> */}\n      <TextBox mode={mode} Style={style} showAlert={showAlert}></TextBox>\n    </>\n    // </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}